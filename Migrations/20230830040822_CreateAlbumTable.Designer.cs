// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practice2.Models;

#nullable disable

namespace Practice2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230830040822_CreateAlbumTable")]
    partial class CreateAlbumTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Practice2.Models.Actor", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("image_url")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("Practice2.Models.Album", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Cantanteid")
                        .HasColumnType("int");

                    b.Property<int?>("albumid")
                        .HasColumnType("int");

                    b.Property<string>("image_url")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Cantanteid");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Practice2.Models.Cantante", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Genre")
                        .HasColumnType("longtext");

                    b.Property<string>("Image_url")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Cantantes");
                });

            modelBuilder.Entity("Practice2.Models.Ciudad", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Image_url")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("Practice2.Models.Comment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ciudadid")
                        .HasColumnType("int");

                    b.Property<string>("date")
                        .HasColumnType("longtext");

                    b.Property<string>("text")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("ciudadid");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Practice2.Models.Movie", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("director")
                        .HasColumnType("longtext");

                    b.Property<string>("genre")
                        .HasColumnType("longtext");

                    b.Property<string>("poster")
                        .HasColumnType("longtext");

                    b.Property<string>("rating")
                        .HasColumnType("longtext");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<string>("year")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Practice2.Models.Album", b =>
                {
                    b.HasOne("Practice2.Models.Cantante", "Cantante")
                        .WithMany("Album")
                        .HasForeignKey("Cantanteid");

                    b.Navigation("Cantante");
                });

            modelBuilder.Entity("Practice2.Models.Comment", b =>
                {
                    b.HasOne("Practice2.Models.Ciudad", "ciudad")
                        .WithMany("Comments")
                        .HasForeignKey("ciudadid");

                    b.Navigation("ciudad");
                });

            modelBuilder.Entity("Practice2.Models.Cantante", b =>
                {
                    b.Navigation("Album");
                });

            modelBuilder.Entity("Practice2.Models.Ciudad", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
